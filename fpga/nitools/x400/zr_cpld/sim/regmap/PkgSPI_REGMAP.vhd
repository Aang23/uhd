---------------------------------------------------------------------
--
-- Copyright 2021 Ettus Research, A National Instruments Brand
-- SPDX-License-Identifier: LGPL-3.0-or-later
--
-- Module: PkgSPI_REGMAP.vhd
--
-- Purpose:
--   The constants in this file are autogenerated by XmlParse.
--
----------------------------------------------------------------------
library ieee;
  use ieee.std_logic_1164.all;
  use ieee.numeric_std.all;

package PkgSPI_REGMAP is

--===============================================================================
-- A numerically ordered list of registers and their HDL source files
--===============================================================================

  -- BASE_WINDOW_SPI       : 0x0 (zr_top_cpld.v)
  -- RECONFIG              : 0x20 (zr_top_cpld.v)
  -- POWER_REGS            : 0x40 (zr_top_cpld.v)
  -- DB_CONTROL_WINDOW_SPI : 0x1000 (zr_top_cpld.v)

--===============================================================================
-- RegTypes
--===============================================================================

--===============================================================================
-- Register Group SPI_REGMAP_WINDOWS
--===============================================================================

  -- BASE_WINDOW_SPI Window (from zr_top_cpld.v)
  constant kBASE_WINDOW_SPI : integer := 16#0#; -- Window Offset
  constant kBASE_WINDOW_SPISize: integer := 16#20#;  -- size in bytes
  --function kBASE_WINDOW_SPIRec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- RECONFIG Window (from zr_top_cpld.v)
  constant kRECONFIG : integer := 16#20#; -- Window Offset
  constant kRECONFIGSize: integer := 16#20#;  -- size in bytes
  --function kRECONFIGRec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- POWER_REGS Window (from zr_top_cpld.v)
  constant kPOWER_REGS : integer := 16#40#; -- Window Offset
  constant kPOWER_REGSSize: integer := 16#20#;  -- size in bytes
  --function kPOWER_REGSRec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- DB_CONTROL_WINDOW_SPI Window (from zr_top_cpld.v)
  constant kDB_CONTROL_WINDOW_SPI : integer := 16#1000#; -- Window Offset
  constant kDB_CONTROL_WINDOW_SPISize: integer := 16#5000#;  -- size in bytes
  --function kDB_CONTROL_WINDOW_SPIRec return XReg2_t; -- Window Record function commented out due to programmable attributes

end package;

package body PkgSPI_REGMAP is

  -- function kBASE_WINDOW_SPIRec not implemented because BASE_WINDOW_SPI has programmable attributes
  ---- Return the record of window kBASE_WINDOW_SPI
  --function kBASE_WINDOW_SPIRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"0");
  --  Rec.size := kBASE_WINDOW_SPISize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("BASE_WINDOW_SPI");
  --  --synopsys translate_on
  --  return Rec;
  --end function kBASE_WINDOW_SPIRec;

  -- function kRECONFIGRec not implemented because RECONFIG has programmable attributes
  ---- Return the record of window kRECONFIG
  --function kRECONFIGRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"20");
  --  Rec.size := kRECONFIGSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("RECONFIG");
  --  --synopsys translate_on
  --  return Rec;
  --end function kRECONFIGRec;

  -- function kPOWER_REGSRec not implemented because POWER_REGS has programmable attributes
  ---- Return the record of window kPOWER_REGS
  --function kPOWER_REGSRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"40");
  --  Rec.size := kPOWER_REGSSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("POWER_REGS");
  --  --synopsys translate_on
  --  return Rec;
  --end function kPOWER_REGSRec;

  -- function kDB_CONTROL_WINDOW_SPIRec not implemented because DB_CONTROL_WINDOW_SPI has programmable attributes
  ---- Return the record of window kDB_CONTROL_WINDOW_SPI
  --function kDB_CONTROL_WINDOW_SPIRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"1000");
  --  Rec.size := kDB_CONTROL_WINDOW_SPISize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("DB_CONTROL_WINDOW_SPI");
  --  --synopsys translate_on
  --  return Rec;
  --end function kDB_CONTROL_WINDOW_SPIRec;

end package body;
