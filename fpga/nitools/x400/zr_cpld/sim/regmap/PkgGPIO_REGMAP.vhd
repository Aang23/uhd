---------------------------------------------------------------------
--
-- Copyright 2021 Ettus Research, A National Instruments Brand
-- SPDX-License-Identifier: LGPL-3.0-or-later
--
-- Module: PkgGPIO_REGMAP.vhd
--
-- Purpose:
--   The constants in this file are autogenerated by XmlParse.
--
----------------------------------------------------------------------
library ieee;
  use ieee.std_logic_1164.all;
  use ieee.numeric_std.all;

package PkgGPIO_REGMAP is

--===============================================================================
-- A numerically ordered list of registers and their HDL source files
--===============================================================================

  -- BASE_WINDOW_GPIO       : 0x0 (zr_top_cpld.v)
  -- DB_CONTROL_WINDOW_GPIO : 0x1000 (zr_top_cpld.v)

--===============================================================================
-- RegTypes
--===============================================================================

--===============================================================================
-- Register Group GPIO_REGMAP_WINDOWS
--===============================================================================

  -- BASE_WINDOW_GPIO Window (from zr_top_cpld.v)
  constant kBASE_WINDOW_GPIO : integer := 16#0#; -- Window Offset
  constant kBASE_WINDOW_GPIOSize: integer := 16#20#;  -- size in bytes
  --function kBASE_WINDOW_GPIORec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- DB_CONTROL_WINDOW_GPIO Window (from zr_top_cpld.v)
  constant kDB_CONTROL_WINDOW_GPIO : integer := 16#1000#; -- Window Offset
  constant kDB_CONTROL_WINDOW_GPIOSize: integer := 16#5000#;  -- size in bytes
  --function kDB_CONTROL_WINDOW_GPIORec return XReg2_t; -- Window Record function commented out due to programmable attributes

end package;

package body PkgGPIO_REGMAP is

  -- function kBASE_WINDOW_GPIORec not implemented because BASE_WINDOW_GPIO has programmable attributes
  ---- Return the record of window kBASE_WINDOW_GPIO
  --function kBASE_WINDOW_GPIORec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"0");
  --  Rec.size := kBASE_WINDOW_GPIOSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("BASE_WINDOW_GPIO");
  --  --synopsys translate_on
  --  return Rec;
  --end function kBASE_WINDOW_GPIORec;

  -- function kDB_CONTROL_WINDOW_GPIORec not implemented because DB_CONTROL_WINDOW_GPIO has programmable attributes
  ---- Return the record of window kDB_CONTROL_WINDOW_GPIO
  --function kDB_CONTROL_WINDOW_GPIORec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"1000");
  --  Rec.size := kDB_CONTROL_WINDOW_GPIOSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("DB_CONTROL_WINDOW_GPIO");
  --  --synopsys translate_on
  --  return Rec;
  --end function kDB_CONTROL_WINDOW_GPIORec;

end package body;
