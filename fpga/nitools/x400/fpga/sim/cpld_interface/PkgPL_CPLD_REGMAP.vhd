---------------------------------------------------------------------
--
-- Copyright 2021 Ettus Research, A National Instruments Brand
-- SPDX-License-Identifier: LGPL-3.0-or-later
--
-- Module: PkgPL_CPLD_REGMAP.vhd
--
-- Purpose:
--   The constants in this file are autogenerated by XmlParse.
--
----------------------------------------------------------------------
library ieee;
  use ieee.std_logic_1164.all;
  use ieee.numeric_std.all;

package PkgPL_CPLD_REGMAP is

--===============================================================================
-- A numerically ordered list of registers and their HDL source files
--===============================================================================

  -- BASE     : 0x0 (cpld_interface.v)
  -- MB_CPLD  : 0x8000 (cpld_interface.v)
  -- DB0_CPLD : 0x10000 (cpld_interface.v)
  -- DB1_CPLD : 0x18000 (cpld_interface.v)

--===============================================================================
-- RegTypes
--===============================================================================

--===============================================================================
-- Register Group PL_CPLD_WINDOWS
--===============================================================================

  -- BASE Window (from cpld_interface.v)
  constant kBASE : integer := 16#0#; -- Window Offset
  constant kBASESize: integer := 16#40#;  -- size in bytes
  --function kBASERec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- MB_CPLD Window (from cpld_interface.v)
  constant kMB_CPLD : integer := 16#8000#; -- Window Offset
  constant kMB_CPLDSize: integer := 16#8000#;  -- size in bytes
  --function kMB_CPLDRec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- DB0_CPLD Window (from cpld_interface.v)
  constant kDB0_CPLD : integer := 16#10000#; -- Window Offset
  constant kDB0_CPLDSize: integer := 16#8000#;  -- size in bytes
  --function kDB0_CPLDRec return XReg2_t; -- Window Record function commented out due to programmable attributes

  -- DB1_CPLD Window (from cpld_interface.v)
  constant kDB1_CPLD : integer := 16#18000#; -- Window Offset
  constant kDB1_CPLDSize: integer := 16#8000#;  -- size in bytes
  --function kDB1_CPLDRec return XReg2_t; -- Window Record function commented out due to programmable attributes

end package;

package body PkgPL_CPLD_REGMAP is

  -- function kBASERec not implemented because BASE has programmable attributes
  ---- Return the record of window kBASE
  --function kBASERec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"0");
  --  Rec.size := kBASESize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("BASE");
  --  --synopsys translate_on
  --  return Rec;
  --end function kBASERec;

  -- function kMB_CPLDRec not implemented because MB_CPLD has programmable attributes
  ---- Return the record of window kMB_CPLD
  --function kMB_CPLDRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"8000");
  --  Rec.size := kMB_CPLDSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("MB_CPLD");
  --  --synopsys translate_on
  --  return Rec;
  --end function kMB_CPLDRec;

  -- function kDB0_CPLDRec not implemented because DB0_CPLD has programmable attributes
  ---- Return the record of window kDB0_CPLD
  --function kDB0_CPLDRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"10000");
  --  Rec.size := kDB0_CPLDSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("DB0_CPLD");
  --  --synopsys translate_on
  --  return Rec;
  --end function kDB0_CPLDRec;

  -- function kDB1_CPLDRec not implemented because DB1_CPLD has programmable attributes
  ---- Return the record of window kDB1_CPLD
  --function kDB1_CPLDRec return XReg2_t is
  --  variable Rec : XReg2_t;
  --begin
  --  Rec := kXRegDefault;
  --  Rec.version := 1;
  --  Rec.offset := XAddrResize(X"18000");
  --  Rec.size := kDB1_CPLDSize;
  --  Rec.readable := true;
  --  Rec.writable := true;
  --  Rec.wmask := XRegResize(X"00");
  --  Rec.rmask := XRegResize(X"00");
  --  Rec.strobemask := XRegResize(X"00");
  --  Rec.clearablemask := XRegResize(X"00");
  --  Rec.iswin := true;
  --  --synopsys translate_off
  --  Rec.name := rs("DB1_CPLD");
  --  --synopsys translate_on
  --  return Rec;
  --end function kDB1_CPLDRec;

end package body;
